# üöÄ Instrucciones de Ejecuci√≥n R√°pida

## ‚ö° Inicio R√°pido

### 1. Instalar Dependencias del Backend
```bash
cd backend
pip install -r requirements.txt
```

### 2. Instalar Dependencias del Frontend
```bash
cd frontend
npm install
```

### 3. Ejecutar la Aplicaci√≥n

**Terminal 1 - Backend:**
```bash
cd backend
python app.py
```
*Servidor corriendo en: http://localhost:5000*

**Terminal 2 - Frontend:**
```bash
cd frontend
npm start
```
*Aplicaci√≥n corriendo en: http://localhost:3000*

## üîß Configuraci√≥n Inicial

### Base de Datos MySQL
```sql
CREATE DATABASE ia_project;
-- Ejecutar: backend/data/schema.sql
```

**‚ö†Ô∏è IMPORTANTE - Puerto de Base de Datos:**
- El proyecto est√° configurado para usar el **puerto 3307** (no el est√°ndar 3306)
- Si tu MySQL usa puerto 3306, edita `backend/config_new.py`:
```python
DATABASE_CONFIG = {
    'host': 'localhost',
    'port': 3306,  # Cambiar de 3307 a 3306 si es necesario
    'user': 'root',
    'password': 'tu_password',
    'database': 'ia_project'
}
```

### API Key de Google Gemini (Para Generador de Texto)
El generador de texto usa **Google Gemini 1.5 Flash**. Para probarlo:

1. **Obtener API Key:**
   - Ve a [Google AI Studio](https://makersuite.google.com/app/apikey)
   - Crea una cuenta si no tienes
   - Genera una nueva API Key

2. **Configurar API Key:**
   - Edita `backend/config_new.py`
   - Reemplaza la API key existente:
```python
# Reemplazar con tu API key real
GOOGLE_API_KEY = "tu_api_key_aqui"
```

**üìù Nota:** Sin API key v√°lida, el generador de texto usar√° respuestas locales de respaldo.

### Entrenar Modelos (Primera vez)
```bash
cd backend
python save_model.py
```

### Verificar Modelos
```bash
cd backend
python -c "from app import load_models; print('Modelos OK:', load_models())"
```

## üìÅ Estructura de Carpetas

- `backend/` - C√≥digo del servidor Flask
- `frontend/` - Aplicaci√≥n React
- `models/` - Modelos de IA entrenados
- `docs/` - Documentaci√≥n completa

## ‚ùì Problemas Comunes

1. **Error de modelos**: Ejecutar `python save_model.py` en `/backend`
2. **Error de DB**: Verificar MySQL y credenciales en `config_new.py`
   - Revisar puerto (3307 vs 3306)
   - Verificar usuario y contrase√±a
3. **Puerto ocupado**: Cambiar puertos en archivos de configuraci√≥n
4. **Generador de texto no funciona**: 
   - Verificar API key de Google Gemini en `config_new.py`
   - Asegurar conexi√≥n a internet
5. **Error "Los modelos no est√°n disponibles"**: 
   - Ejecutar `python save_model.py` desde `/backend`
   - Verificar que existan archivos en `/models`

---
**¬°Listo para usar! üéâ**